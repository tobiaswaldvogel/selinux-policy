;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: Â© 2020 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .luci.bwc.subj_type_transition (subj))
    (call .luci.cgi.subj_type_transition (subj))
    (call .luci.peeraddr.subj_type_transition (subj))
    (call .luci.reload.subj_type_transition (subj))
    (call .luci.subj_type_transition (subj)))

(in .dnsmasq
    (call .luci.writeinherited_fifo_files (subj)))

(in .file
    (call .luci.bwc.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .luci.cgi.obj_type_transition_cgiscriptfile
          (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_execfile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_conffile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_datafile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_libfile (unconfined.subj_typeattr))
    (call .luci.obj_type_transition_tmpfile
          (unconfined.subj_typeattr dir "luci-modulecache"))
    (call .luci.peeraddr.obj_type_transition_execfile
          (unconfined.subj_typeattr))
    (call .luci.reload.obj_type_transition_execfile
          (unconfined.subj_typeattr)))

(in .jshn
    (call .luci.writeinherited_fifo_files (subj)))

(in .ubus
    (call .luci.use_fds (subj)))

(in .uhttpd
    (call .luci.cgi.subj_type_transition (subj)))

(in .wpad
    (call .luci.use_fds (subj)))

(block luci

       ;;
       ;; Contexts
       ;;

       (filecon
        "/etc/luci-uploads"
        dir
        conffile_file_context)
       (filecon
        "/etc/luci-uploads/.*"
        any
        conffile_file_context)

       (filecon
        "/tmp/luci-indexcache\..*"
        file
        tmpfile_file_context)

       (filecon
        "/tmp/luci-modulecache"
        dir
        tmpfile_file_context)
       (filecon
        "/tmp/luci-modulecache/.*"
        any
        tmpfile_file_context)

       (filecon
        "/usr/bin/rpcd/luci"
        file
        execfile_file_context)

       (filecon
        "/usr/lib/liblucihttp\.so\..*"
        file
        libfile_file_context)

       (filecon
        "/usr/share/luci"
        dir
        datafile_file_context)
       (filecon
        "/usr/share/luci/.*"
        any
        datafile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_conffile ((type ARG1))
              (call .file.conffile_obj_type_transition
                    (ARG1 conffile dir "luci-uploads")))

       (macro obj_type_transition_datafile ((type ARG1))
              (call .file.datafile_obj_type_transition
                    (ARG1 datafile dir "luci")))

       (macro obj_type_transition_execfile ((type ARG1))
              (call .file.execfile_obj_type_transition
                    (ARG1 execfile file "luci")))

       (macro obj_type_transition_libfile ((type ARG1))
              (call .file.libfile_obj_type_transition
                    (ARG1 libfile file "liblucihttp.so.0.1")))

       (macro obj_type_transition_tmpfile ((type ARG1)(class ARG2)(name ARG3))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile ARG2 ARG3)))

       ;;
       ;; Policy
       ;;

       (blockinherit .agent.base_template)
       (blockinherit .file.conf.obj_template)
       (blockinherit .file.data.obj_template)
       (blockinherit .file.lib.obj_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (setuid)))
       (allow subj self (process (setfscreate setrlimit)))
       (allow subj self create_unix_dgram_socket)

       (call mapexecute_libfile_files (subj))
       (call read_libfile_files (subj))

       (call .sys.read_fs_lnk_files (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .cron.list_miscfile_dirs (subj))
       (call .cron.read_miscfile_files (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .dnsmasq.subj_type_transition (subj))

       (call .file.auth.write.subj_type (subj))
       (call .file.execute_initscriptfile_files (subj))
       (call .file.list_initscriptfile_dirs (subj))
       (call .file.manage_conffile_lnk_files (subj))
       (call .file.readwrite_conffile_dirs (subj))

       (call .fs.getattr_all_filesystems (subj))

       (call .functions.read_miscfile_files (subj))
       (call .functions.search_miscfile_dirs (subj))

       (call .fw3.read_datafile_files (subj))
       (call .fw3.search_datafile_dirs (subj))
       (call .fw3.subj_type_transition (subj))

       (call .jshn.subj_type_transition (subj))

       (call .kernel.search_sysctlfile_dirs (subj))

       (call .leds.list_sysfile_dirs (subj))

       (call .libc.mapexecute_libfile_files (subj))
       (call .libc.read_libfile_files (subj))

       (call .libfts.mapexecute_libfile_files (subj))
       (call .libfts.read_libfile_files (subj))

       (call .libgccruntime.mapexecute_libfile_files (subj))
       (call .libgccruntime.read_libfile_files (subj))

       (call .libjsonc.mapexecute_libfile_files (subj))
       (call .libjsonc.read_libfile_files (subj))

       (call .libnltiny.mapexecute_libfile_files (subj))
       (call .libnltiny.read_libfile_files (subj))

       (call .libpcre.mapexecute_libfile_files (subj))
       (call .libpcre.read_libfile_files (subj))

       (call .libselinux.linked.subj_type (subj))

       (call .libubox.mapexecute_libfile_files (subj))
       (call .libubox.read_datafile_files (subj))
       (call .libubox.read_libfile_files (subj))
       (call .libubox.search_datafile_dirs (subj))

       (call .libubus.mapexecute_libfile_files (subj))
       (call .libubus.read_libfile_files (subj))

       (call .loadavg.read_procfile_files (subj))

       (call .logd.unix_dgram_send (subj))

       (call .lua.execute_execfile_files (subj))
       (call .lua.list_libfile_dirs (subj))
       (call .lua.mapexecute_libfile_files (subj))
       (call .lua.read_libfile_files (subj))

       (call .meminfo.read_procfile_files (subj))

       (call .module.search_sysfile_dirs (subj))

       (call .nameservice.manage_miscfile_files (subj))

       (call .proc.list_fs_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .rccommon.read_conffile_files (subj))

       (call .rpcd.readwriteinherited_fifo_files (subj))

       (call .selinux.computeav (subj))

       (call .shadow.manage_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .shell.execute_execfile_files (subj))

       (call .ssl.search_certfile_dirs (subj))

       (call .stat.read_procfile_files (subj))

       (call .subj.read_state_all_subjects (subj))

       (call .tmpfile.search_locktmpfile_dirs (subj))
       (call .tmpfile.search_runtimetmpfile_dirs (subj))
       (call .tmpfile.write_locktmpfile_files (subj))

       (call .ubus.subj_type_transition (subj))

       (call .uci.subj_type_transition (subj))

       (call .wpad.subj_type_transition (subj))

       (optional luci_opt_rcboot
                 (call .rcboot.subj_type_transition (subj)))

       (optional luci_opt_rccron
                 (call .rccron.subj_type_transition (subj)))

       (optional luci_opt_rcdnsmasq
                 (call .rcdnsmasq.subj_type_transition (subj)))

       (optional luci_opt_rcdropbear
                 (call .rcdropbear.subj_type_transition (subj)))

       (optional luci_opt_rcfirewall
                 (call .rcfirewall.subj_type_transition (subj)))

       (optional luci_opt_rcgpioswitch
                 (call .rcgpioswitch.subj_type_transition (subj)))

       (optional luci_opt_rcled
                 (call .rcled.subj_type_transition (subj)))

       (optional luci_opt_rclog
                 (call .rclog.subj_type_transition (subj)))

       (optional luci_opt_rcnetwork
                 (call .rcnetwork.subj_type_transition (subj)))

       (optional luci_opt_rcodhcpd
                 (call .rcodhcpd.subj_type_transition (subj)))

       (optional luci_opt_rcsysctl
                 (call .rcsysctl.subj_type_transition (subj)))

       (optional luci_opt_rcsysfixtime
                 (call .rcsysfixtime.subj_type_transition (subj)))

       (optional luci_opt_rcsysntpd
                 (call .rcsysntpd.subj_type_transition (subj)))

       (optional luci_opt_rcsystem
                 (call .rcsystem.subj_type_transition (subj)))

       (optional luci_opt_rcumount
                 (call .rcumount.subj_type_transition (subj)))

       (optional luci_opt_rcurandomseed
                 (call .rcurandomseed.subj_type_transition (subj)))

       (optional luci_opt_rcurngd
                 (call .rcurngd.subj_type_transition (subj)))

       (optional luci_opt_rcwpad
                 (call .rcwpad.subj_type_transition (subj)))

       (block bwc

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/luci-bwc"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-bwc")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template))

       (block cgi

              ;;
              ;; Contexts
              ;;

              (filecon
               "/www/cgi-bin/luci"
               file
               cgiscriptfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_cgiscriptfile ((type ARG1))
                     (call .file.cgiscriptfile_obj_type_transition
                           (ARG1 cgiscriptfile file "luci")))

              ;;
              ;; Policy
              ;;

              (blockinherit .cgiscript.base_template)

              (allow subj self create_unix_stream_socket)

              (call list_datafile_dirs (subj))

              (call manage_tmpfile_dirs (subj))
              (call manage_tmpfile_files (subj))
              (call obj_type_transition_tmpfile (subj dir "luci-modulecache"))
              (call obj_type_transition_tmpfile (subj file "*"))

              (call .sys.search_fs_dirs (subj))
              (call .sys.writeinherited_fifo_files (subj))

              (call .class.search_sysfile_dirs (subj))

              (call .dropbear.auditexecute_execfile_files (subj))

              (call .file.search_conffile_dirs (subj))
              (call .file.search_datafile_dirs (subj))
              (call .file.search_cgiscriptfile_dirs (subj))

              (call .fw3.auditexecute_execfile_files (subj))

              (call .leds.list_sysfile_dirs (subj))

              (call .libc.mapexecute_libfile_files (subj))
              (call .libc.read_libfile_files (subj))

              (call .libgccruntime.mapexecute_libfile_files (subj))
              (call .libgccruntime.read_libfile_files (subj))

              (call .libjsonc.mapexecute_libfile_files (subj))
              (call .libjsonc.read_libfile_files (subj))

              (call .libnltiny.mapexecute_libfile_files (subj))
              (call .libnltiny.read_libfile_files (subj))

              (call .libubox.mapexecute_libfile_files (subj))
              (call .libubox.read_libfile_files (subj))

              (call .libubus.mapexecute_libfile_files (subj))
              (call .libubus.read_libfile_files (subj))

              (call .lua.execute_execfile_files (subj))
              (call .lua.list_libfile_dirs (subj))
              (call .lua.mapexecute_libfile_files (subj))
              (call .lua.read_libfile_files (subj))

              (call .luci.mapexecute_libfile_files (subj))
              (call .luci.read_datafile_files (subj))
              (call .luci.read_libfile_files (subj))
              (call .luci.search_datafile_dirs (subj))

              (call .nameservice.read_miscfile_files (subj))

              (call .osrelease.read_miscfile_files (subj))

              (call .random.read_nodedev_chr_files (subj))

              (call .shadow.read_authfile_files (subj))
              (call .shadow.read.subj_type (subj))

              (call .swconfig.auditexecute_execfile_files (subj))

              (call .tmpfile.search_runtimetmpfile_dirs (subj))

              (call .ubusd.unix_stream_connect (subj))

              (call .uhttpd.readwriteinherited_fifo_files (subj))

              (call .www.search_miscfile_dirs (subj)))

       (block peeraddr

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/luci-peeraddr"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-peeraddr")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template))

       (block reload

              ;;
              ;; Contexts
              ;;

              (filecon
               "/usr/bin/luci-reload"
               file
               execfile_file_context)

              ;;
              ;; Macros
              ;;

              (macro obj_type_transition_execfile ((type ARG1))
                     (call .file.execfile_obj_type_transition
                           (ARG1 execfile file "luci-reload")))

              ;;
              ;; Policy
              ;;

              (blockinherit .agent.base_template)))
