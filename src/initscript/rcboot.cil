;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: Â© 2020 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .sys
    (call .rcboot.subj_type_transition (subj)))

(in .file
    (call .rcboot.obj_type_transition_initscriptfile
          (unconfined.subj_typeattr))
    (call .rcboot.obj_type_transition_tmpfile (unconfined.subj_typeattr)))

(block rcboot

       ;;
       ;; Contexts
       ;;

       (filecon
        "/tmp/\.failsafe"
        file
        tmpfile_file_context)

       (filecon
        "/etc/init\.d/boot"
        file
        initscriptfile_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_initscriptfile ((type ARG1))
              (call .file.initscriptfile_obj_type_transition
                    (ARG1 initscriptfile file "boot")))

       (macro obj_type_transition_tmpfile ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 tmpfile file ".failsafe")))

       ;;
       ;; Policy
       ;;

       (blockinherit .initscript.base_template)
       (blockinherit .tmpfile.obj_template)

       (allow subj self (capability (sys_admin)))

       (call manage_tmpfile_files (subj))
       (call obj_type_transition_tmpfile (subj))

       (call .sys.read_fs_lnk_files (subj))
       (call .sys.search_sysctlfile_dirs (subj))

       (call .board.read_miscfile_files (subj))

       (call .bpf.mount_filesystems (subj))

       (call .class.search_sysfile_dirs (subj))

       (call .configgenerate.subj_type_transition (subj))

       (call .debug.mount_filesystems (subj))

       (call .dev.stor.read.subj_type (subj))

       (call .devices.read_sysfile_files (subj))
       (call .devices.search_sysfile_dirs (subj))

       (call .filesystems.read_procfile_files (subj))

       (call .fs.mounton_sysfile_dirs (subj))

       (call .fwenv.create_conffile_files (subj))
       (call .fwenv.obj_type_transition_conffile (subj))
       (call .fwenv.readwrite_conffile_files (subj))
       (call .fwenv.read_miscfile_files (subj))

       (call .ipv6.read_sysctlfile_files (subj))
       (call .ipv6.search_sysctlfile_dirs (subj))

       (call .jffs2bbc.write_procfile_files (subj))

       (call .kernel.mounton_sysfile_dirs (subj))
       (call .kernel.search_sysfile_dirs (subj))

       (call .kmodloader.subj_type_transition (subj))

       (call .lastlog.create_logtmpfile_files (subj))
       (call .lastlog.obj_type_transition_logtmpfile (subj))
       (call .lastlog.readwrite_logtmpfile_files (subj))

       (call .mountroot.subj_type_transition (subj))

       (call .mtd.read_stordev_chr_files (subj))

       (call .net.search_sysctlfile_dirs (subj))

       (call .opkg.list_miscfile_dirs (subj))
       (call .opkg.read_conffile_files (subj))
       (call .opkg.read_miscfile_files (subj))

       (call .osrelease.read_miscfile_files (subj))

       (call .preinit.read_tmpfile_files (subj))
       (call .preinit.search_tmpfile_dirs (subj))

       (call .random.read_nodedev_chr_files (subj))

       (call .reloadconfig.subj_type_transition (subj))

       (call .resolv.addname_tmpfile_dirs (subj))
       (call .resolv.create_tmpfile_dirs (subj))
       (call .resolv.create_tmpfile_files (subj))
       (call .resolv.obj_type_transition_tmpfile (subj))
       (call .resolv.readwrite_tmpfile_files (subj))

       (call .shadow.read_authfile_files (subj))
       (call .shadow.read.subj_type (subj))

       (call .uci.create_conffile_files (subj))
       (call .uci.create_tmpfile_dirs (subj))
       (call .uci.defaults.delete_conffile_files (subj))
       (call .uci.defaults.deletename_conffile_dirs (subj))
       (call .uci.defaults.read_conffile_files (subj))
       (call .uci.obj_type_transition_tmpfile (subj))
       (call .uci.readwrite_conffile_files (subj))
       (call .uci.addname_conffile_dirs (subj))
       (call .uci.setattr_tmpfile_dirs (subj))
       (call .uci.subj_type_transition (subj))

       (call .tmp.addname_fs_dirs (subj))
       (call .tmp.create_fs_dirs (subj))
       (call .tmp.create_fs_lnk_files (subj))
       (call .tmp.rootfile_obj_type_transition_fs (subj))

       (call .tmpfile.create_locktmpfile_dirs (subj))
       (call .tmpfile.create_logtmpfile_dirs (subj))
       (call .tmpfile.create_runtimetmpfile_dirs (subj))
       (call .tmpfile.create_statetmpfile_dirs (subj))
       (call .tmpfile.obj_type_transition_locktmpfile (subj))
       (call .tmpfile.obj_type_transition_logtmpfile (subj))
       (call .tmpfile.obj_type_transition_runtimetmpfile (subj))
       (call .tmpfile.obj_type_transition_statetmpfile (subj))

       (call .wtmp.create_logtmpfile_files (subj))
       (call .wtmp.obj_type_transition_logtmpfile (subj))
       (call .wtmp.readwrite_logtmpfile_files (subj))

       (optional rcboot_opt_blockmount
                 (call .blockmount.subj_type_transition (subj))))
