;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-FileCopyrightText: Â© 2020 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(in .dev
    (call .zram.obj_type_transition_stordev (unconfined.subj_typeattr)))

(in .dev.stor
    (call .zram.obj_type_transition_stordev (unconfined.subj_typeattr)))

(block zram

       ;;
       ;; Contexts
       ;;

       (filecon
        "/dev/zram[0-9]+"
        block
        stordev_file_context)

       ;;
       ;; Macros
       ;;

       (macro obj_type_transition_stordev ((type ARG1))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram0"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram1"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram2"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram3"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram4"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram5"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram6"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram7"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram8"))
              (call .tmp.fs_obj_type_transition
                    (ARG1 stordev blk_file "zram9")))

       ;;
       ;; Policy
       ;;

       (blockinherit .dev.stor.obj_template))
